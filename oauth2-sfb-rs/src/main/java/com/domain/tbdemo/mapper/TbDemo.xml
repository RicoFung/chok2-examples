<?xml version="1.0" encoding="UTF-8"?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">   

<mapper namespace="com.domain.tbdemo.dao.TbDemoDao">
	<!-- 开启基于redis的二级缓存 -->
	<!-- 
    <cache type="chok.redis.mybatis.RedisCache">
    	<property name="eviction" value="LRU" />
        <property name="flushInterval" value="6000000" />
        <property name="size" value="1024" />
        <property name="readOnly" value="false" />
    </cache>
     -->

	<!-- 
	****************************************************************************************************
	* WRITE
	****************************************************************************************************
	-->
	
    <!-- 自动生成id策略 -->
    <insert id="add" parameterType="com.domain.tbdemo.model.entity.TbDemoEntity"> 
       	<selectKey keyProperty="tcRowid" resultType="string" order="BEFORE">
	         SELECT SEQ_TB_DEMO.NEXTVAL FROM DUAL
		</selectKey>
       	INSERT INTO TB_DEMO 
       	( TC_ROWID, TC_CODE, TC_NAME) 
       	VALUES
       	( #{tcRowid}, #{tcCode}, #{tcName})
    </insert>  
    
    <insert id="addBatch">
    	INSERT INTO TB_DEMO
    	(
        TC_ROWID,
        TC_CODE,
        TC_NAME
        )
	    SELECT SEQ_DEMO.NEXTVAL, T.*
        FROM 
        (
	    <foreach collection ="list" item="item" index="index" separator="UNION ALL">
	    SELECT
		#{item.tcCode} AS TC_CODE,
		#{item.tcName} AS TC_NAME
	    FROM DUAL
	    </foreach>
        ) T
    </insert>
	
	<delete id="del">
		DELETE FROM TB_DEMO 
		 WHERE 
		TC_ROWID IN
		<foreach collection="array" item="tcRowid" index="index" open="(" close=")" separator=",">#{tcRowid}</foreach>
	</delete>
	
	<update id="upd" parameterType="com.domain.tbdemo.model.entity.TbDemoEntity">
		UPDATE TB_DEMO T
		<set>
        <if test="@chok.devwork.Ognl@isNotNull(tcCode)"> T.TC_CODE = #{tcCode},</if>
        <if test="@chok.devwork.Ognl@isNotNull(tcName)"> T.TC_NAME = #{tcName}</if>
        </set>
         WHERE T.TC_ROWID = #{tcRowid}  
	</update>
  	
  	<update id="updBatch">
  		<foreach collection="list" index="index" item="item" open="begin" close=";end;" separator=";">
	        UPDATE TB_DEMO T
	        <set>
		       <if test="@chok.devwork.Ognl@isNotEmpty(item.tcCode)"> T.TC_CODE = #{item.tcCode},</if>
		       <if test="@chok.devwork.Ognl@isNotEmpty(item.tcName)"> T.TC_NAME = #{item.tcName},</if>
	        </set>
			WHERE T.TC_ROWID = #{item.tcRowid}  
    	</foreach>
  	</update>

	<!-- 
	****************************************************************************************************
	* READ
	****************************************************************************************************
	-->
  	
	<sql id="dynamicColumns">
		<choose>
			<when test="@chok.devwork.Ognl@isNotEmpty(dynamicColumns) and @chok.devwork.Ognl@isNotNull(dynamicColumns)">
			    <foreach collection ="dynamicColumns" item="col" index="index" separator=",">
					<if test="col == 'tcRowid'">T.TC_ROWID</if>
					<if test="col == 'tcCode'">T.TC_CODE</if>
					<if test="col == 'tcName'">T.TC_NAME</if>
			    </foreach>
			</when>
			<otherwise>
				T.TC_ROWID, 
				T.TC_CODE, 
				T.TC_NAME 
			</otherwise>
		</choose>
	</sql>
	
	<sql id="dynamicOrder">
		<choose>
			<when test="@chok.devwork.Ognl@isNotEmpty(dynamicOrder)">
				ORDER BY <foreach collection="dynamicOrder" index="index" item="item" separator=",">TT.<include refid="orderParse" /> ${item.sortOrder}</foreach>  
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</sql>
	<sql id="orderParse">
		<if test="item.sortName == 'tcRowid'">TC_ROWID</if>
		<if test="item.sortName == 'tcCode'">TC_CODE</if>
		<if test="item.sortName == 'tcName'">TC_NAME</if>
	</sql>
	
	<sql id="dynamicWhere">
		<where>
			<if test="@chok.devwork.Ognl@isNotEmpty(dynamicWhere.tcRowidArray)"> 
				AND T.TC_ROWID IN
				<foreach collection="dynamicWhere.tcRowidArray" item="tcRowid" index="index" open="(" close=")" separator=",">#{tcRowid}</foreach>
			</if>
	       	<if test="@chok.devwork.Ognl@isNotEmpty(dynamicWhere.tcCode)"> AND T.TC_CODE LIKE '%'||#{dynamicWhere.tcCode}||'%'</if>
	       	<if test="@chok.devwork.Ognl@isNotEmpty(dynamicWhere.tcName)"> AND T.TC_NAME LIKE '%'||#{dynamicWhere.tcName}||'%'</if>
		</where>
	</sql>	
	
	<!-- getOne -->
	<resultMap type="com.domain.tbdemo.model.data.TbDemoGetOneData" id="getOneData">
        <result property="tcRowid" column="TC_ROWID"/>
        <result property="tcCode" column="TC_CODE"/>
        <result property="tcName" column="TC_NAME"/>
	</resultMap>
	<select id="getOne" resultMap="getOneData">
		SELECT <include refid="dynamicColumns"/> 
		  FROM TB_DEMO T 
         WHERE T.TC_ROWID = #{tcRowid}  
	</select>
	
	<!-- getList -->
	<resultMap type="com.domain.tbdemo.model.data.TbDemoGetListData" id="getListData" extends="getOneData">
	</resultMap>
	<select id="getList" parameterType="com.domain.tbdemo.model.query.TbDemoGetListQuery" resultType="list" resultMap="getListData">
		<choose>
			<!-- 翻页 -->
			<when test="@chok.devwork.Ognl@isNotEmpty(page) and @chok.devwork.Ognl@isNotEmpty(pagesize)">
				SELECT * FROM (SELECT row_.*, ROWNUM rownum_ FROM(
					SELECT TT.* FROM 
					(
						SELECT <include refid="dynamicColumns"/> FROM TB_DEMO T
						<include refid="dynamicWhere" />
					) TT
					<include refid="dynamicOrder" />
	            ) row_ WHERE rownum &lt;= #{page}*#{pagesize} ) 
	            WHERE rownum_ &gt; (#{page}-1)*#{pagesize}
			</when>
			<!-- 非翻页 -->
			<otherwise>
				SELECT TT.* FROM 
				(
					SELECT <include refid="dynamicColumns"/> FROM TB_DEMO T
					<include refid="dynamicWhere" />
				) TT
				<include refid="dynamicOrder" />
			</otherwise>
		</choose>
	</select>
	
	<select id="getCount" resultType="int">
		SELECT COUNT(1) FROM TB_DEMO T
		<include refid="dynamicWhere" />
	</select>
</mapper>  
